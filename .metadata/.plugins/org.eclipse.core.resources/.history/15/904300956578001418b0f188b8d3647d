package com.anassaeed.bluetooth;

import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.Set;
import java.util.UUID;
import android.annotation.SuppressLint;
import android.app.Activity;
import android.bluetooth.BluetoothAdapter;
import android.bluetooth.BluetoothDevice;
import android.bluetooth.BluetoothManager;
import android.bluetooth.BluetoothSocket;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.os.Bundle;
import android.os.ParcelUuid;
import android.os.Parcelable;
import android.telephony.TelephonyManager;
import android.util.Log;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.Toast;


@SuppressLint("NewApi") public class MainActivity extends Activity {
	public static int btnIndex = 0;
	 static String tag = "BluetoothApp";
	 private static final int REQUEST_ENABLE_BT = 0;  
     public static BluetoothSocket microcontrollerSocket = null;
     public static UUID microctrollerUUID =null;
     private Parcelable[] microcontollerDevice = null;
	 BluetoothManager bluetoothManager = null;
	 String microcontrollerName = "Anas's MacBook Pro";
	 boolean connected = false;
	 boolean devicePresent = false;
	 public static BluetoothAdapter bluetoothAdapter = null;
	 Set<BluetoothDevice> pairedDevices = null;
	 public static InputStream inputStream = null;
     public static OutputStream outputStream = null;
     String uuidOfPhone = "";
     ParcelUuid[] microcontrollerUUID = null;
     Button btnScanning;
     
    protected void onCreate(Bundle savedInstanceState) {
    	ListOfDevices.arrayList = null;

        setContentView(R.layout.activity_main);
        MainActivity.this.getWindow().getDecorView().setSystemUiVisibility(View.SYSTEM_UI_FLAG_HIDE_NAVIGATION);
//        Intent intent = new Intent(MainActivity.this, ReadAndWrite.class);
        try{
//        	startActivity(intent);
        } catch(Exception e){
        	e.printStackTrace();        	return;

        }
        btnScanning = (Button) findViewById(R.id.btnScanning);
        btnScanning.setOnClickListener(new View.OnClickListener() {
            public void onClick(View view) {
            	
                 turnOnBluethooth();
                 while (bluetoothAdapter.isEnabled() == false){}
                 makeDiscoverable();
                 startScanningForDevices();
            }
         });   
    }
    public void turnOnBluethooth(){
    	 bluetoothManager = (BluetoothManager) getSystemService(Context.BLUETOOTH_SERVICE);
         bluetoothAdapter =   BluetoothAdapter.getDefaultAdapter();
         if (bluetoothAdapter == null){
        	 Toast.makeText(getBaseContext(), "Bluetooth is not avalible on this phone",Toast.LENGTH_SHORT).show();
         }
         if(!bluetoothAdapter.isEnabled()){
             Intent enableBtIntent = new Intent(BluetoothAdapter.ACTION_REQUEST_ENABLE);
             startActivityForResult(enableBtIntent, REQUEST_ENABLE_BT);
             Log.i(tag, "Bluetooth turn on");
         } else {
        	 Log.i(tag, "Bluetooth already on");
         }
        
    }
    public void makeDiscoverable(){
    			Intent discoverableIntent = new
    			Intent(BluetoothAdapter.ACTION_REQUEST_DISCOVERABLE);
    			discoverableIntent.putExtra(BluetoothAdapter.EXTRA_DISCOVERABLE_DURATION, 500);
    			startActivity(discoverableIntent);
    			Log.i(tag, "Bluetooth made discoverable");
    } 
    public void startScanningForDevices(){  	
    	if (bluetoothAdapter.startDiscovery()){
    		Log.i(tag, "Starting scanning for devices");
    		try{
    			Intent intent = new Intent(MainActivity.this, ListOfDevices.class);
    			startActivity(intent);
    			overridePendingTransition(R.anim.fadein, R.anim.fadeout);

    		}catch(Exception e){
    			e.printStackTrace();
    		}
    	} else {
    		Toast.makeText(getBaseContext(), "Could not scan for devices please try again",Toast.LENGTH_SHORT).show();
    	}
    }
 
    public void getUUIDOfPhone(){
    	TelephonyManager tManager = (TelephonyManager)getSystemService(Context.TELEPHONY_SERVICE);
    	uuidOfPhone =  tManager.getDeviceId();
    }
    @Override
    public boolean onOptionsItemSelected(MenuItem item) {

        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();
        if (id == R.id.action_settings) {
            return true;
        }
        return super.onOptionsItemSelected(item);
    } 
    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.main, menu);
        return true;
    }
}
